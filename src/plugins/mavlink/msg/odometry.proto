syntax = "proto3";

package mavlink.msg.common;

message Odometry {
  uint64 time_usec = 1; /*< [us] Timestamp (UNIX Epoch time or time since system boot) The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.*/
  float x = 2; /*< [m] X Position*/
  float y = 3; /*< [m] Y Position*/
  float z = 4; /*< [m] Z Position*/
  repeated float q = 5; /*<  Quaternion components, w, x, y, z (1 0 0 0 is the null-rotation)*/
  float vx = 6; /*< [m/s] X linear speed*/
  float vy = 7; /*< [m/s] Y linear speed*/
  float vz = 8; /*< [m/s] Z linear speed*/
  float rollspeed = 9; /*< [rad/s] Roll angular speed*/
  float pitchspeed = 10; /*< [rad/s] Pitch angular speed*/
  float yawspeed = 11; /*< [rad/s] Yaw angular speed*/
  repeated float pose_covariance = 12; /*<  Row-major representation of a 6x6 pose cross-covariance matrix upper right triangle (states: x, y, z, roll, pitch, yaw; first six entries are the first ROW, next five entries are the second ROW, etc). If unknown, assign NaN value to first element in the array.*/
  repeated float velocity_covariance = 13; /*<  Row-major representation of a 6x6 velocity cross-covariance matrix upper right triangle (states: vx, vy, vz, rollspeed, pitchspeed, yawspeed; first six entries are the first ROW, next five entries are the second ROW, etc). If unknown, assign NaN value to first element in the array.*/
  uint32 frame_id = 14; /*<  Coordinate frame of reference for the pose data*/
  uint32 child_frame_id = 15; /*<  Coordinate frame of reference for the velocity in free space (twist) data*/
  uint32 reset_counter = 16; /*<  Estimate reset counter This should be incremented when the estimate resets in any of the dimensions (position, velocity, attitude, angular speed). This is designed to be used when e.g an external SLAM system detects a loop-closure and the estimate jumps.*/
  uint32 estimator_type = 17; /*<  Type of estimator that is providing the odometry*/
  sint32 quality = 18; /*< [%] Optional odometry quality metric as a percentage -1 = odometry has failed, 0 = unknown/unset quality, 1 = worst quality, 100 = best quality*/
}

