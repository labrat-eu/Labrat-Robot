syntax = "proto3";

package mavlink.msg.common;

message Gps2Raw {
  uint64 time_usec = 1; /*< [us] Timestamp (UNIX Epoch time or time since system boot) The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.*/
  sint32 lat = 2; /*< [degE7] Latitude (WGS84)*/
  sint32 lon = 3; /*< [degE7] Longitude (WGS84)*/
  sint32 alt = 4; /*< [mm] Altitude (MSL) Positive for up.*/
  uint32 dgps_age = 5; /*< [ms] Age of DGPS info*/
  uint32 eph = 6; /*<  GPS HDOP horizontal dilution of position (unitless * 100) If unknown, set to: UINT16_MAX*/
  uint32 epv = 7; /*<  GPS VDOP vertical dilution of position (unitless * 100) If unknown, set to: UINT16_MAX*/
  uint32 vel = 8; /*< [cm/s] GPS ground speed If unknown, set to: UINT16_MAX*/
  uint32 cog = 9; /*< [cdeg] Course over ground (NOT heading, but direction of movement): 00..359.99 degrees. If unknown, set to: UINT16_MAX*/
  uint32 fix_type = 10; /*<  GPS fix type*/
  uint32 satellites_visible = 11; /*<  Number of satellites visible If unknown, set to UINT8_MAX*/
  uint32 dgps_numch = 12; /*<  Number of DGPS satellites*/
  uint32 yaw = 13; /*< [cdeg] Yaw in earth frame from north Use 0 if this GPS does not provide yaw. Use UINT16_MAX if this GPS is configured to provide yaw and is currently unable to provide it. Use 36000 for north.*/
  sint32 alt_ellipsoid = 14; /*< [mm] Altitude (above WGS84, EGM96 ellipsoid) Positive for up.*/
  uint32 h_acc = 15; /*< [mm] Position uncertainty*/
  uint32 v_acc = 16; /*< [mm] Altitude uncertainty*/
  uint32 vel_acc = 17; /*< [mm] Speed uncertainty*/
  uint32 hdg_acc = 18; /*< [degE5] Heading / track uncertainty*/
}

