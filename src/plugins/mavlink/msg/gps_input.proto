syntax = "proto3";

package mavlink.msg.common;

message GpsInput {
  uint64 time_usec = 1; /*< [us] Timestamp (UNIX Epoch time or time since system boot) The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.*/
  uint32 time_week_ms = 2; /*< [ms] GPS time (from start of GPS week)*/
  sint32 lat = 3; /*< [degE7] Latitude (WGS84)*/
  sint32 lon = 4; /*< [degE7] Longitude (WGS84)*/
  float alt = 5; /*< [m] Altitude (MSL) Positive for up.*/
  float hdop = 6; /*<  GPS HDOP horizontal dilution of position (unitless) If unknown, set to: UINT16_MAX*/
  float vdop = 7; /*<  GPS VDOP vertical dilution of position (unitless) If unknown, set to: UINT16_MAX*/
  float vn = 8; /*< [m/s] GPS velocity in north direction in earth-fixed NED frame*/
  float ve = 9; /*< [m/s] GPS velocity in east direction in earth-fixed NED frame*/
  float vd = 10; /*< [m/s] GPS velocity in down direction in earth-fixed NED frame*/
  float speed_accuracy = 11; /*< [m/s] GPS speed accuracy*/
  float horiz_accuracy = 12; /*< [m] GPS horizontal accuracy*/
  float vert_accuracy = 13; /*< [m] GPS vertical accuracy*/
  uint32 ignore_flags = 14; /*<  Bitmap indicating which GPS input flags fields to ignore  All other fields must be provided.*/
  uint32 time_week = 15; /*<  GPS week number*/
  uint32 gps_id = 16; /*<  ID of the GPS for multiple GPS inputs*/
  uint32 fix_type = 17; /*<  0-1: no fix, 2: 2D fix, 3: 3D fix 4: 3D with DGPS. 5: 3D with RTK*/
  uint32 satellites_visible = 18; /*<  Number of satellites visible*/
  uint32 yaw = 19; /*< [cdeg] Yaw of vehicle relative to Earth's North, zero means not available, use 36000 for north*/
}

