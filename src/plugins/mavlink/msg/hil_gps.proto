syntax = "proto3";

package mavlink.msg.common;

message HilGps {
  uint64 time_usec = 1; /*< [us] Timestamp (UNIX Epoch time or time since system boot) The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.*/
  sint32 lat = 2; /*< [degE7] Latitude (WGS84)*/
  sint32 lon = 3; /*< [degE7] Longitude (WGS84)*/
  sint32 alt = 4; /*< [mm] Altitude (MSL) Positive for up.*/
  uint32 eph = 5; /*<  GPS HDOP horizontal dilution of position (unitless * 100) If unknown, set to: UINT16_MAX*/
  uint32 epv = 6; /*<  GPS VDOP vertical dilution of position (unitless * 100) If unknown, set to: UINT16_MAX*/
  uint32 vel = 7; /*< [cm/s] GPS ground speed If unknown, set to: UINT16_MAX*/
  sint32 vn = 8; /*< [cm/s] GPS velocity in north direction in earth-fixed NED frame*/
  sint32 ve = 9; /*< [cm/s] GPS velocity in east direction in earth-fixed NED frame*/
  sint32 vd = 10; /*< [cm/s] GPS velocity in down direction in earth-fixed NED frame*/
  uint32 cog = 11; /*< [cdeg] Course over ground (NOT heading, but direction of movement), 00..359.99 degrees. If unknown, set to: UINT16_MAX*/
  uint32 fix_type = 12; /*<  0-1: no fix, 2: 2D fix, 3: 3D fix Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.*/
  uint32 satellites_visible = 13; /*<  Number of satellites visible If unknown, set to UINT8_MAX*/
  uint32 id = 14; /*<  GPS ID (zero indexed) Used for multiple GPS inputs*/
  uint32 yaw = 15; /*< [cdeg] Yaw of vehicle relative to Earth's North, zero means not available, use 36000 for north*/
}

