syntax = "proto3";

package mavlink.msg.common;

message OpenDroneIdSystem {
  sint32 operator_latitude = 1; /*< [degE7] Latitude of the operator If unknown: 0 (both Lat/Lon).*/
  sint32 operator_longitude = 2; /*< [degE7] Longitude of the operator If unknown: 0 (both Lat/Lon).*/
  float area_ceiling = 3; /*< [m] Area Operations Ceiling relative to WGS84 If unknown: -1000 m. Used only for swarms/multiple UA.*/
  float area_floor = 4; /*< [m] Area Operations Floor relative to WGS84 If unknown: -1000 m. Used only for swarms/multiple UA.*/
  float operator_altitude_geo = 5; /*< [m] Geodetic altitude of the operator relative to WGS84 If unknown: -1000 m.*/
  uint32 timestamp = 6; /*< [s] 32 bit Unix Timestamp in seconds since 00:00:00 01/01/2019*/
  uint32 area_count = 7; /*<  Number of aircraft in the area, group or formation (default 1) Used only for swarms/multiple UA.*/
  uint32 area_radius = 8; /*< [m] Radius of the cylindrical area of the group or formation (default 0) Used only for swarms/multiple UA.*/
  uint32 target_system = 9; /*<  System ID (0 for broadcast)*/
  uint32 target_component = 10; /*<  Component ID (0 for broadcast)*/
  bytes id_or_mac = 11; /*<  Only used for drone ID data received from other UAs See detailed description at https://mavlink.io/en/services/opendroneid.html. */
  uint32 operator_location_type = 12; /*<  Specifies the operator location type*/
  uint32 classification_type = 13; /*<  Specifies the classification type of the UA*/
  uint32 category_eu = 14; /*<  When classification_type is MAV_ODID_CLASSIFICATION_TYPE_EU, specifies the category of the UA*/
  uint32 class_eu = 15; /*<  When classification_type is MAV_ODID_CLASSIFICATION_TYPE_EU, specifies the class of the UA*/
}

