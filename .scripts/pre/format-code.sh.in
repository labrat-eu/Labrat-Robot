#!/bin/bash

# Script to format the C/C++ code to comply with the style guidelines.

# Usage string function.
usage() {
  echo "Usage: $0 [option]..."
  echo "Script to format the C/C++ code in order comply with the style guidelines."
  echo
  echo "Options:"
  echo "  -p PATH          Set path for recursive file lookup."
  echo "  -c CLANG-VERSION Set clang major version number."
  echo "  -v               Verbose mode."
  echo "  -q               Quiet mode. Do not print to stdout."
  echo "  -h               Display this help page and exit."

  exit 0
}

# Get absolute path.
path=$(pwd)
clang_version="14"

# Process command line options.
while getopts 'p:c:vqh' flag; do
  case "$flag" in
  p) path=$(echo ${OPTARG} | xargs) ;;
  c) clang_version=$(echo ${OPTARG} | xargs);;
  v) verbose=1 ;;
  q) quiet=1 ;;
  h|*) usage ;;
  esac
done

# Iterate over the source files.
for file in $(find $path -name '*.cpp' -or -name '*.hpp'); do
  if [ $verbose ]; then
    # Display file name message.
    echo "Formatting file: $file"
  fi

  # Run clang-format.
  clang-format-$clang_version -i --style=file $file

  if [ $? -ne 0 ]; then
    if ! [ $quiet ]; then
      # Display debug message.
      echo "Failed to format the code."
    fi
    # Return on an invalid code style.
    exit 1
  fi
done

if ! [ $quiet ]; then
  # Display incompleness note.
  echo "The code was successfully formatted."
fi

# Exit normally.
exit 0
